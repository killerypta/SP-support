import asyncio
from aiogram import Router, types
from aiogram.filters import Command
from service.database import eat_cookie, get_top_cookie, get_total_weight
from service.utils import escape_html, get_user_info

router = Router()

@router.message(Command("cookie"))
async def cookie(message: types.Message):
    user_id, first_name = get_user_info(message)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
    weight, remaining_minutes, remaining_seconds = eat_cookie(user_id, first_name)

    total_weight = get_total_weight(user_id)

    if weight is None:
        result_message = await message.answer(f"<code>{first_name}</code>, –ø–æ–≤—Ç–æ—Ä–∏ —á–µ—Ä–µ–∑ <b>{remaining_minutes} –º–∏–Ω—É—Ç</b> –∏ <b>{remaining_seconds} —Å–µ–∫—É–Ω–¥</b>.", parse_mode="HTML")
    else:
        result_message = await message.answer(f"<code>{first_name}</code>, —Ç—ã —Å—ä–µ–ª(–∞) <b>{weight} –∫–≥</b> –ø–µ—á–µ–Ω—å—è üç™ –°—ä–µ–¥–µ–Ω–æ —É–∂–µ <b>{total_weight} –∫–≥</b>.", parse_mode="HTML")
    
    # –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥ 
    await asyncio.sleep(60)
    await message.delete()
    await result_message.delete()
                    
@router.message(Command("cookietop"))
async def cookie_top(message: types.Message):
    top_users = get_top_cookie()
    if not top_users:
        await message.answer("–¢–æ–ø –ø–æ–∫–∞ –ø—É—Å—Ç! –ù–∞—á–Ω–∏ —Å–æ–±–∏—Ä–∞—Ç—å –ø–µ—á–µ–Ω—å–∫–∏ /cookie! üç™")
        return
    
    top_text = "üç™ <b>–¢–æ–ø 10</b> –∏–≥—Ä–æ–∫–æ–≤ <b>Cookie!</b> –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è:\n"
    for i, (user_id, first_name, total_weight) in enumerate(top_users):
        top_text += f"{i+1}. <code>{first_name}</code> ‚Äî <b>{total_weight} –∫–≥</b>\n"

    result_message = await message.answer(top_text, parse_mode="HTML")

    # –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 180 —Å–µ–∫—É–Ω–¥
    await asyncio.sleep(180)
    await message.delete()
    await result_message.delete()